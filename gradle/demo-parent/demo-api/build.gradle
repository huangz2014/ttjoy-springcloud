plugins {
    id 'java-library'
    id 'maven-publish'
//    id 'signing'
}
configurations {
    runtime.exclude module: "org.springframework.boot"
    compile.exclude module: "org.springframework.boot"
}
java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId("${project.name}")
//            artifactId = jar.archiveBaseName
            from components.java
            pom {
                name = 'My Library'
                description = 'A concise description of my library'
                url = 'http://www.example.com/library'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnd'
                        name = 'John Doe'
                        email = 'john.doe@example.com'
                    }
                }
//                scm {
//                    connection = 'scm:git:git://example.com/my-library.git'
//                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
//                    url = 'http://example.com/my-library/'
//                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "http://localhost:8082/artifactory/ttjoy-releases/"
            def snapshotsRepoUrl = "http://localhost:8082/artifactory/ttjoy-snapshot/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username 'admin'
                password 'a11111111'
            }
        }
    }
}

//signing {
//    sign publishing.publications.mavenJava
//}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}